require: "rubocop-rspec"

# feature spec で scenario を使っても良い
Capybara/FeatureMethods:
  Enabled: false

# 短い subject は一行で書いて良い
RSpec/EmptyLineAfterSubject:
  Enabled: false

# it が一つしか無いような context では空行を開ける方が読みづらい
#   context "when foo is bar" do
#     let(:foo) { bar }
#     it { is_expected.to do_something }
#   end
RSpec/EmptyLineAfterFinalLet:
  Enabled: false

# each で回したり aggregate_failures 使ってたりすると厳しい。
# feature spec は exclude でも良いかもしれない。
# ヒアドキュメント使うと一瞬で超えるので disable も検討。
RSpec/ExampleLength:
  Max: 8

# 変に名前つけて呼ぶ方が分かりづらい。
# テスト対象メソッドを呼ぶだけの subject 以外を書かないようにする方が効く。
RSpec/NamedSubject:
  Enabled: false

# 強く 1 example 1 assertion の立場は取らないが、多すぎてもツラいので。
RSpec/MultipleExpectations:
  Max: 3

# feature spec で、分岐が多くなると 4 より多くしたいことがあるので、5 まで緩める
RSpec/NestedGroups:
  Max: 5
